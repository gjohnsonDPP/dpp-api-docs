openapi: 3.0.0
info:
  title: DebtPayPro API
  description: ' '
  version: 1.0.0
  contact:
    name: Support
    email: support@debtpaypro.com
servers:
  - url: 'https://api.debtpaypro.com/v1'
    description: Production
tags:
  - name: Auth
    description: All available actions for Auth
  - name: Calls
    description: All available actions for Calls
  - name: Campaigns
    description: All available actions for Campaigns
  - name: Companies
    description: All available actions for Companies
  - name: Contacts
    description: All available actions for Contacts
  - name: Debts
    description: All available actions for Debts
  - name: Debt_Tasks
    description: All available actions for Debt Tasks
  - name: Documents
    description: All available actions for Documents
  - name: DocumentTypes
    description: All available actions for DocumentTypes
  - name: Forms
    description: Actions associated with Forms
  - name: Loans
    description: All available actions for Loans
  - name: Notes
    description: All available actions for Notes
  - name: Packages
    description: All available actions for Packages
  - name: Settlement_Offers
    description: All available actions for Settlement Offers
  - name: SMS
    description: Actions associated with SMS Messages
  - name: Tasks
    description: All available actions for Tasks
  - name: Teams
    description: All available actions for Teams
  - name: Users
    description: All available actions for Users
paths:
  /auth/token:
    post:
      tags:
        - Auth
      summary: Get API Authorization Token
      description: Receive an API Authorization Token. The Token that is returned can be entered for any API Request that requires an *Api-Key*.
      operationId: authGetToken
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                client_secret:
                  type: string
                client_id:
                  type: string
              required:
                - client_secret
                - client_id
      security: []
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get API Authization Token
                    items:
                      type: object
                      properties:
                        api_key:
                          type: string
                          description: API Authorization Token
                        expires_in:
                          type: integer
                          description: Time Until Token Expires
  /calls:
    post:
      summary: Create a Call Record
      description: |-
        Creates a Call Record and log the call to a client.

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: callCreate
      tags:
        - Calls
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: models/CallRequest.yaml
            examples:
              Request:
                value:
                  contactID: 475956560
                  sdate: '2019-08-24'
                  call_type: Outgoing
                  call_result: Busy
                  notes: Lorem Ipsum
                  status_change: 274158
                  duration: '00:01:15'
                  event_id: 8179
                  dialer_id: 1
                  recording_url: 'https://stairwork.ru/test.mp3'
                  assigned_agent: 432156
              Required Parameters Only:
                value:
                  contactID: 475956560
                  call_type: Outgoing
                  call_result: Busy
      responses:
        '200':
          description: Successfully created a Call Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Call Example 200 POST Response:
                  value:
                    response:
                      id: 385319179
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Call Example 400 Response:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/calls/{id}':
    get:
      tags:
        - Calls
      summary: Find a Call Record by ID
      description: Returns a Call Record
      operationId: callRead
      parameters:
        - name: id
          in: path
          description: Id of Call Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Call Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/CallResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Call GET 200 Response Example:
                  value:
                    response:
                      object: call
                      id: 392857759
                      acctID: 3863
                      contactID: 382760691
                      userID: 4950368
                      sdate: '2021-12-09'
                      created_at: '2021-12-09 09:52:21'
                      call_type: Outgoing
                      call_result: Busy
                      notes: Lorem Ipsum
                      status_change: 274158
                      duration: '00:01:15'
                      event_id: '8179'
                      dialer_id: '2'
                      recording_url: 'https://www.testcallrecording.com'
                      assigned_agent:
                        object: user
                        id: '4950368'
                        acctID: '3863'
                        company_id: '42128'
                        parent_id: '0'
                        user_type: '1'
                        created: '2019-10-02 02:41:18'
                        user_name: JohnD
                        firstname: John
                        lastname: Doe
                        company: ''
                        email: test@debtpaypro.com
                        active: '1'
                        role: '29399'
                        attorney: '0'
                        payee_id: '0'
                        del: '0'
                        delTime: null
                        pass_reset: '0'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
                required:
                  - status
              examples:
                Call GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Calls
      summary: Update a Call Record by ID
      description: Updates a Call Record
      operationId: callUpdate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: ./models/CallRequest.yaml
            examples:
              Request:
                value:
                  contactID: 516553837
                  sdate: '2019-08-24'
                  call_type: Outgoing
                  call_result: Busy
                  notes: Lorem Ipsum
                  status_change: 274158
                  duration: '00:01:15'
                  event_id: 8179
                  dialer_id: 1
                  recording_url: 'https://www.testcallrecording.com'
      parameters:
        - name: id
          in: path
          description: Id of Call Record to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully Updated a Call Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/CallResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Call PUT 200 Response Example:
                  value:
                    response:
                      object: call
                      id: 392857759
                      acctID: 3863
                      contactID: 382760691
                      userID: 4950368
                      sdate: '2021-12-09'
                      created_at: '2021-12-09 09:52:21'
                      call_type: Outgoing
                      call_result: Busy
                      notes: Lorem Ipsum
                      status_change: 274158
                      duration: '00:01:15'
                      event_id: '8179'
                      dialer_id: '2'
                      recording_url: 'https://www.testcallrecording.com'
                      assigned_agent:
                        object: user
                        id: '4950368'
                        acctID: '3863'
                        company_id: '42128'
                        parent_id: '0'
                        user_type: '1'
                        created: '2019-10-02 02:41:18'
                        user_name: JohnD
                        firstname: John
                        lastname: Doe
                        company: ''
                        email: test@debtpaypro.com
                        active: '1'
                        role: '29399'
                        attorney: '0'
                        payee_id: '0'
                        del: '0'
                        delTime: null
                        pass_reset: '0'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
                required:
                  - status
              examples:
                Call PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Calls
      summary: Delete Call Record by ID
      description: Deletes a Call Record
      operationId: callDelete
      parameters:
        - name: id
          in: path
          description: Id of Call Record to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully Deleted a Call Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Calls DELETE 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
                required:
                  - status
              examples:
                Call DELETE 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /campaigns/e-mail:
    post:
      tags:
        - Campaigns
      summary: Create a Campaign Record
      description: |-
        Creates a Campaign Record

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: campaignCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/CampaignRequest.yaml
            examples:
              Request:
                value:
                  active: true
                  title: Campaign Title
                  start_date: '2019-08-24'
                  end_date: '2019-08-24'
                  source_id: 3184
                  cost: 1984.25
                  cost_type: 1
                  priority: 4
                  media_type: 1
                  purchase_amount: 42
              Required Parameters Only:
                value:
                  title: Campaign Title
                  start_date: '2019-08-24'
                  end_date: '2019-08-24'
                  cost: 1984.25
                  media_type: 1
      responses:
        '200':
          description: Successfully created a Campaign Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Campaign POST 200 Response Example:
                  value:
                    response:
                      id: 152283
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Campaigns POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/campaigns/e-mail/{id}':
    get:
      tags:
        - Campaigns
      summary: Find a Campaign Record by ID
      description: Returns a Campaign Record
      operationId: campaignRead
      parameters:
        - name: id
          in: path
          description: Id of Campaign Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Campaign Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/CampaignResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Campaign GET 200 Response Example:
                  value:
                    response:
                      object: campaign
                      id: 177286
                      acctID: 3863
                      company_id: 21752
                      active: true
                      created_at: '2019-08-24T14:15:22Z'
                      created_by: 3028014
                      token: string
                      title: Campaign Title
                      start_date: '2019-08-24'
                      end_date: '2019-08-24'
                      source_id: 3184
                      cost: 1984.25
                      cost_type: 1
                      priority: 4
                      external_id: 0
                      media_type: 1
                      purchase_amount: 42
                      del: false
                      del_by: 0
                      deltime: '2019-08-24T14:15:22Z'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Campaign GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Campaigns
      summary: Update a Campaign Record by ID
      description: Updates a Campaign Record
      operationId: campaignUpdate
      parameters:
        - name: id
          in: path
          description: Id of Campaign Record to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/CampaignResponse.yaml
      responses:
        '200':
          description: Successfully updated a Campaign Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/CampaignResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Campaign PUT 200 Response Example:
                  value:
                    response:
                      object: campaign
                      id: 177286
                      acctID: 3863
                      company_id: 21752
                      active: true
                      created_at: '2019-08-24T14:15:22Z'
                      created_by: 3028014
                      token: string
                      title: Campaign Title
                      start_date: '2019-08-24'
                      end_date: '2019-08-24'
                      source_id: 3184
                      cost: 1984.25
                      cost_type: 1
                      priority: 4
                      external_id: 0
                      media_type: 1
                      purchase_amount: 42
                      del: false
                      del_by: 0
                      deltime: '2019-08-24T14:15:22Z'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Campaign PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Campaigns
      summary: Delete a Campaign Record by ID
      description: Deletes a Campaign Record
      operationId: campaignDelete
      parameters:
        - name: id
          in: path
          description: Id of Campaign Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted Campaign Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Campaign DELETE 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Campaign DELETE 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /contacts:
    post:
      tags:
        - Contacts
      summary: Create a Contact Record
      description: |-
        Creates a Contact Record

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: contactCreate
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: models/ContactRequest.yaml
            examples:
              Request:
                value:
                  file_type: 1
                  form_id: 18626
                  assigned_to: 6045085
                  campaign_id: 128312
                  attorney: false
                  attorney_id: 0
                  attorney_id2: 0
                  first_name: John
                  middle_name: E.
                  last_name: Doe
                  salutation: Salutation
                  title: Mr.
                  phone_number: '12242525887'
                  phone_extension: 123
                  cell_phone: '12242525887'
                  cell_extension: 123
                  work_phone: '13123839986'
                  work_extension: 123
                  address:
                    address1: 123 Main St.
                    address2: Apt. 4008
                    address3: string
                    city: Chicago
                    state: IL
                    zip: '60612'
                  email: test@debtpaypro.com
                  social_security_number: '551192922'
                  date_of_birth: '1941-03-12'
                  language: 1
                  submitted: false
                  submitted_by: 4637734
                  submitted_at: '2020-02-21 16:23:29'
                  approved_by2: 0
                  approved_date2: '2020-02-21'
                  rejected_by: 0
                  rejected_notes: n/a
                  paused_notes: n/a
                  dropped_reason: 0
                  grad_date: '2020-05-27'
                  total_debt: 0
                  welcome_sent: '2020-02-21 16:23:29'
                  paper_statements: true
                  paper_welcome: true
                  gateway_id: 1
                  gateway_approved_by: 0
                  gateway_hold: false
                  gateway_hold_reason: 0
                  gateway_hold_notes: n/a
                  gateway_auth_received: true
                  gateway_auth_file: 66c29015-debtpaypro_QA_Test_Template_-_Chase_(xxxx4444).pdf
                  iscoapp: false
                  customs:
                    - field_id: 0
                      value: string
                      label: string
              Required Parameters Only:
                value:
                  first_name: John
                  last_name: Doe
                  phone_number: '12242525887'
                  address:
                    address1: 123 Main St.
                    address2: Apt. 4008
                    address3: string
                    city: Chicago
                    state: IL
                    zip: '60612'
                  email: test@debtpaypro.com
                  date_of_birth: '1941-03-12'
      responses:
        '200':
          description: Successfully created a Contact Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Contact POST 200 Response Example:
                  value:
                    response:
                      id: 418304227
                    status:
                      code: 200
                      message: Client Record Created
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Contact POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      summary: Find a Contact Record by ID
      description: Returns a Contact Record
      operationId: contactRead
      parameters:
        - name: id
          in: path
          description: Id of Client to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Contact Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/ContactResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Contact GET 200 Response Example:
                  value:
                    response:
                      object: contact
                      id: 382760691
                      acctID: 3863
                      company_id: 42128
                      file_type: 1
                      form_id: 18626
                      created: '2019-08-24T14:15:22Z'
                      created_by: 4950368
                      modified: '2019-08-24T14:15:22Z'
                      modified_by: 4950368
                      assigned_to: 6515056
                      campaign_id: 158227
                      attorney: false
                      attorney_id: 0
                      attorney_id2: 0
                      first_name: John
                      middle_name: E
                      last_name: Doe
                      salutation: Hello
                      title: Mr.
                      phone_number: '13123831234'
                      phone_extension: 123
                      cell_phone: '13123835678'
                      cell_extension: 123
                      work_phone: '13123839753'
                      work_extension: 123
                      address:
                        address1: 123 Main St.
                        address2: Apt. 4008
                        address3: string
                        city: Chicago
                        state: IL
                        zip: '60612'
                      email: test@test.com
                      social_security_number: 123-45-6789
                      date_of_birth: '1970-01-01'
                      language: 1
                      submitted: false
                      submitted_by: 0
                      submitted_at: '2019-08-24T14:15:22Z'
                      approved_by2: 0
                      approved_date2: '2019-08-24'
                      rejected_by: 0
                      rejected_notes: Rejection Note
                      paused_notes: Paused Note
                      dropped_reason: 1
                      grad_date: '2019-08-24'
                      total_debt: 13755.9
                      welcome_sent: '2019-08-24T14:15:22Z'
                      paper_statements: false
                      paper_welcome: false
                      gateway_id: 0
                      gateway_approved_by: 0
                      gateway_hold: false
                      gateway_hold_reason: 0
                      gateway_hold_notes: string
                      gateway_auth_received: true
                      gateway_auth_file: test_gateway_auth_file.pdf
                      iscoapp: false
                      customs:
                        - field_id: 0
                          value: string
                          label: string
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Contact GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Contacts
      summary: Update a Contact Record by ID
      description: Updates a Contact Record
      operationId: contactUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/ContactResponse.yaml
      parameters:
        - name: id
          in: path
          description: Id of Contact Record to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully Updated a Contact Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/ContactResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Contact PUT 200 Response Example:
                  value:
                    response:
                      object: contact
                      id: 382760691
                      acctID: 3863
                      company_id: 42128
                      file_type: 1
                      form_id: 18626
                      created: '2019-08-24T14:15:22Z'
                      created_by: 4950368
                      modified: '2019-08-24T14:15:22Z'
                      modified_by: 4950368
                      assigned_to: 6515056
                      campaign_id: 158227
                      attorney: false
                      attorney_id: 0
                      attorney_id2: 0
                      first_name: John
                      middle_name: E
                      last_name: Doe
                      salutation: Hello
                      title: Mr.
                      phone_number: '13123831234'
                      phone_extension: 123
                      cell_phone: '13123835678'
                      cell_extension: 123
                      work_phone: '13123839753'
                      work_extension: 123
                      address:
                        address1: 123 Main St.
                        address2: Apt. 4008
                        address3: string
                        city: Chicago
                        state: IL
                        zip: '60612'
                      email: test@test.com
                      social_security_number: 123-45-6789
                      date_of_birth: '1970-01-01'
                      language: 1
                      submitted: false
                      submitted_by: 0
                      submitted_at: '2019-08-24T14:15:22Z'
                      approved_by2: 0
                      approved_date2: '2019-08-24'
                      rejected_by: 0
                      rejected_notes: Rejection Note
                      paused_notes: Paused Note
                      dropped_reason: 1
                      grad_date: '2019-08-24'
                      total_debt: 13755.9
                      welcome_sent: '2019-08-24T14:15:22Z'
                      paper_statements: false
                      paper_welcome: false
                      gateway_id: 0
                      gateway_approved_by: 0
                      gateway_hold: false
                      gateway_hold_reason: 0
                      gateway_hold_notes: string
                      gateway_auth_received: true
                      gateway_auth_file: test_gateway_auth_file.pdf
                      iscoapp: false
                      customs:
                        - field_id: 0
                          value: string
                          label: string
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
                required:
                  - status
              examples:
                Contact PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Contacts
      summary: Delete a Contact Record by ID
      description: Deletes a Contact Record
      operationId: contactDelete
      parameters:
        - name: id
          in: path
          description: Id of Contact Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted a Contact Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Contact DELETE 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Contact DELETE 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/contacts/{id}/form_request':
    post:
      tags:
        - Contacts
        - Forms
      summary: Send Form to Contact Email by ID
      description: Sends a Form to a Contact via Email Address by ContactID
      operationId: sendForm
      parameters:
        - name: id
          in: path
          description: Id of Contact Record to send Form to
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                form_id:
                  type: integer
              required:
                - form_id
      responses:
        '200':
          description: Successfully sent Form to Client
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Form Request POST 200 Response Example:
                  value:
                    response:
                      id: '247980032'
                      acctID: '2123'
                      company_id: '12758'
                      parent_acctID: null
                      tp_id: '88'
                      customerID: VIDEO-247980032
                      file_type: '1'
                      form_id: '0'
                      created: '2018-08-17 17:28:33'
                      created_by: '0'
                      modified: '2021-09-24 15:18:57'
                      modified_by: '0'
                      assigned_to: '2272121'
                      campaign_id: '155880'
                      attorney: '0'
                      attorney_id: '0'
                      attorney_id2: '0'
                      isAccount: null
                      account: null
                      parent_id: null
                      firstname: Test
                      middlename: null
                      lastname: Contact
                      company: null
                      salutation: null
                      department: null
                      title: ''
                      address: 36808 Mandrake Way
                      address2: Suite 200
                      address3: null
                      city: Springfield
                      state: VA
                      zip: '22156'
                      country: null
                      phone: ''
                      extension: null
                      phonetype: null
                      phone2: ''
                      extension2: null
                      phone2type: null
                      phone3: 666-908-8908
                      extension3: null
                      phone3type: null
                      phone4: null
                      extension4: null
                      phone4type: null
                      fax: null
                      fax2: null
                      email: g.johnson@debtpaypro.com
                      email2: ''
                      messenger: null
                      mess_type: null
                      url: null
                      url2: null
                      c_status: null
                      leadstatus: '95663'
                      c_type: '14582'
                      c_source: '31745'
                      unsubscribe: '0'
                      comments: null
                      public: '0'
                      userID: '3471395'
                      session: null
                      siteID: null
                      last_activity: null
                      activity_type: null
                      ssn: '333333333'
                      dob: '0000-00-00'
                      language: '0'
                      submitted: '1'
                      submitted_by: '2272121'
                      submitted_at: '2018-08-21 17:37:23'
                      returned: '0'
                      returned_at: '0000-00-00 00:00:00'
                      enrolled: '1'
                      enrolled_date: '2018-08-21'
                      enrolled_by: '2272121'
                      approved: '1'
                      approved_by: '2272121'
                      approved_date: '2018-08-21'
                      approved2: '0'
                      approved_by2: '0'
                      approved_date2: '0000-00-00'
                      rejected: '0'
                      reject_reason: null
                      rejected_at: '0000-00-00 00:00:00'
                      rejected_by: '0'
                      rejected_notes: ''
                      archived: null
                      paused: '0'
                      paused_notes: ''
                      dropped: '0'
                      dropped_date: null
                      dropped_reason: '0'
                      graduated: '0'
                      grad_reason: null
                      grad_date: '0000-00-00'
                      total_debt: '30000.00'
                      welcome_sent: '2018-08-21 17:39:24'
                      paper_statements: '0'
                      paper_welcome: '0'
                      gateway_id: '1'
                      gateway_hold: '1'
                      gateway_approved_by: '0'
                      gateway_approved_at: '0000-00-00 00:00:00'
                      gateway_hold_reason: '15'
                      gateway_hold_notes: ''
                      gateway_hold_time: '2018-08-22 11:12:02'
                      gateway_auth_received: '0'
                      gateway_auth_file: ''
                      gateway_auth_time: '0000-00-00 00:00:00'
                      iscoapp: '0'
                      del: '0'
                      del_time: null
                      del_who: null
                    status:
                      code: 200
                      message: Form Request Sent
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
                required:
                  - status
              examples:
                Form Request POST 200 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/contacts/{id}/smslog':
    get:
      tags:
        - Contacts
        - SMS
      summary: Get SMS Log Record for a Contact by ID
      description: |-
        Returns all existing SMS Messages logged for a Contact.

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> By default the SMS Messages are returned in order of Newest to Oldest.</i></span>
      operationId: getContactSMSlog
      parameters:
        - name: id
          in: path
          description: Id of Client whose SMS Messages to return
          required: true
          schema:
            type: integer
        - in: query
          name: _offset
          description: (Optional) This value dictates which SMS Message in the ordered SMS Log to start the Request at.
          schema:
            type: integer
            default: 1
          allowEmptyValue: true
        - in: query
          name: _limit
          description: (Optional) This value represents the maximum number of SMS Messages your Request to contain.
          schema:
            type: integer
            default: 1
          allowEmptyValue: true
      responses:
        '200':
          description: Successfully retrieved SMS Log
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                SMS Log GET 200 Response Example:
                  value:
                    response:
                      - id: '65543140'
                        sdate: '2021-11-26 07:26:07'
                        body: "Purchase Price: \r\nSpecified Percentage: \r\nSpecific Daily Amount: \r\nReceipts Purchase Amount: "
                        status: null
                        client_id: '479244860'
                        sender:
                          object: user
                          user_id: '5367555'
                          acctID: '155'
                          guid: 999e3b03-d176-6526-6a31-9e929e0237c6
                          company_id: '1355'
                          parent_id: '38859'
                          user_type: '1'
                          created: '2020-03-10 14:56:03'
                          user_name: Greg
                          firstname: Gregory
                          lastname: Johnson
                          company: ''
                          email: g.johnson@debtpaypro.com
                          active: '1'
                          role: '735'
                          attorney: '0'
                          payee_id: '0'
                          del: '0'
                          delTime: null
                          pass_reset: '0'
                          master: '0'
                          billable: '1'
                        flag: '1'
                        schedule_id: '0'
                        receiver_phone_number: '13123839986'
                        title: null
                        from_number: '+16308350712'
                      - id: '65543134'
                        sdate: '2021-11-26 07:26:03'
                        body: "Hello API,\r\n\r\nYour next payment is scheduled for 12/31/1969, in the amount of 0.00. Please reply to this message, or feel free to contact Billing@company.com if you have any questions.\r\n\r\n\r\nDebt PayPro"
                        status: null
                        client_id: '479244860'
                        sender:
                          object: user
                          user_id: '5367555'
                          acctID: '155'
                          guid: 999e3b03-d176-6526-6a31-9e929e0237c6
                          company_id: '1355'
                          parent_id: '38859'
                          user_type: '1'
                          created: '2020-03-10 14:56:03'
                          user_name: Greg
                          firstname: Gregory
                          lastname: Johnson
                          company: ''
                          email: g.johnson@debtpaypro.com
                          active: '1'
                          role: '735'
                          attorney: '0'
                          payee_id: '0'
                          del: '0'
                          delTime: null
                          pass_reset: '0'
                          master: '0'
                          billable: '1'
                        flag: '1'
                        schedule_id: '0'
                        receiver_phone_number: '13123839986'
                        title: null
                        from_number: '+16308350712'
                      - id: '65543131'
                        sdate: '2021-11-26 07:25:58'
                        body: TEST
                        status: null
                        client_id: '479244860'
                        sender:
                          object: user
                          user_id: '5367555'
                          acctID: '155'
                          guid: 999e3b03-d176-6526-6a31-9e929e0237c6
                          company_id: '1355'
                          parent_id: '38859'
                          user_type: '1'
                          created: '2020-03-10 14:56:03'
                          user_name: Greg
                          firstname: Gregory
                          lastname: Johnson
                          company: ''
                          email: g.johnson@debtpaypro.com
                          active: '1'
                          role: '735'
                          attorney: '0'
                          payee_id: '0'
                          del: '0'
                          delTime: null
                          pass_reset: '0'
                          master: '0'
                          billable: '1'
                        flag: '1'
                        schedule_id: '0'
                        receiver_phone_number: '13123839986'
                        title: null
                        from_number: '+16308350712'
                      - id: '65543128'
                        sdate: '2021-11-26 07:25:47'
                        body: "Hello API,\r\n\r\nWelcome to the program. Your first payment is $0, scheduled for . Please contact Customer Services if you have any questions."
                        status: null
                        client_id: '479244860'
                        sender:
                          object: user
                          user_id: '5367555'
                          acctID: '155'
                          guid: 999e3b03-d176-6526-6a31-9e929e0237c6
                          company_id: '1355'
                          parent_id: '38859'
                          user_type: '1'
                          created: '2020-03-10 14:56:03'
                          user_name: Greg
                          firstname: Gregory
                          lastname: Johnson
                          company: ''
                          email: g.johnson@debtpaypro.com
                          active: '1'
                          role: '735'
                          attorney: '0'
                          payee_id: '0'
                          del: '0'
                          delTime: null
                          pass_reset: '0'
                          master: '0'
                          billable: '1'
                        flag: '1'
                        schedule_id: '0'
                        receiver_phone_number: '13123839986'
                        title: null
                        from_number: '+16308350712'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
                required:
                  - status
              examples:
                SMS Log GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /debts:
    post:
      tags:
        - Debts
      summary: Create a Debt Record
      description: |-
        Creates a Debt Record

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: debtCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/DebtRequest.yaml
            examples:
              Request:
                value:
                  original_debt_amount: 10500
                  current_debt_amount: 9499.5
                  current_payment: 153
                  current_rate: 0
                  verified_debt_amount: 0
                  creditor: 540
                  debt_buyer: 17576331
                  poa_sent_date: '2019-08-24'
                  legal_account: 'No'
                  last_payment_date: '2019-08-24'
                  last_payment_amount: 0
                  opened_date: '2019-08-24'
                  available_balance: 0
                  enrolled: false
                  enrolled_date: '2019-08-24'
                  debt_type: 0
                  debt_status: ''
                  locked: false
                  og_account_num: '12345674445'
                  creditor_account_num: ''
                  settled: false
                  settlement_id: 0
                  client_id: 382760691
                  settlement_offers:
                    - string
                  customs:
                    - string
              Required Parameters Only:
                value:
                  original_debt_amount: 10500
                  current_debt_amount: 9499.5
                  creditor: 540
                  client_id: 382760691
      responses:
        '200':
          description: Successfully created a Debt Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Debt POST 200 Response Example:
                  value:
                    response:
                      id: 163287505
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/debts/{id}':
    get:
      tags:
        - Debts
      summary: Find a Debt Record by ID
      description: Returns a Debt Record
      operationId: debtRead
      parameters:
        - name: id
          in: path
          description: Id of Debt Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Debt Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/DebtResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Debt GET 200 Response Example:
                  value:
                    response:
                      object: debt
                      id: 163287508
                      acctID: 3863
                      created_at: '2021-11-22 04:43:57'
                      created_by:
                        object: user
                        user_id: 4950368
                        company_id: 42128
                        parent_id: 0
                        user_type: 1
                        created: '2019-10-02 02:41:18'
                        user_name: JDoe
                        firstname: John
                        lastname: Doe
                        company: ''
                        email: test@test.com
                        active: true
                        role: 29399
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                        pass_reset: '0'
                      modified_at: null
                      modified_by: null
                      original_debt_amount: 10500
                      current_debt_amount: 9499.5
                      current_payment: 153
                      current_rate: 0
                      notes: null
                      verified_debt_amount: 0
                      creditor:
                        object: creditor
                        creditor_id: 540
                        acctID: 3863
                        tp_id: 0
                        is_active: '1'
                        company_name: Chase
                        first_name: null
                        last_name: null
                        address:
                          address1: P O Box 15919
                          address2: ''
                          address3: null
                          city: Wilmington
                          state: Delaware
                          zip: 19850-0464
                        phone: 800-444-9370
                      debt_buyer:
                        object: creditor
                        creditor_id: 17576331
                        acctID: 3863
                        tp_id: 0
                        is_active: '1'
                        company_name: Bob's Debt Co.
                        first_name: Bob
                        last_name: Smith
                        address:
                          address1: 101 Debt Way
                          address2: Suite 2200
                          address3: null
                          city: Chicago
                          state: IL
                          zip: '60614'
                        phone: '3123839994'
                      poa_sent_date: '2019-08-24'
                      legal_account: 'No'
                      last_payment_date: '2019-08-24'
                      last_payment_amount: 0
                      opened_date: '2019-08-24'
                      available_balance: 0
                      enrolled: '0'
                      enrolled_date: '2019-08-24 00:00:00'
                      debt_type: '0'
                      cash_advance: '0'
                      balance_transfer: '0'
                      heavy_usage: '0'
                      has_summons: '0'
                      debt_status: null
                      locked: '0'
                      og_account_num: '12345674445'
                      creditor_account_num: null
                      settled: '0'
                      settlement_id: 0
                      client_id: 382760691
                      settlement_offers: []
                      customs: []
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Debts
      summary: Update a Debt Record by ID
      description: Updates a Debt Record
      operationId: debtUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/DebtResponse.yaml
      parameters:
        - name: id
          in: path
          description: Id of Debt Record to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully Updated a Debt Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/DebtResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Debt PUT 200 Response Example:
                  value:
                    response:
                      object: debt
                      id: 163287508
                      acctID: 3863
                      created_at: '2021-11-22 04:43:57'
                      created_by:
                        object: user
                        user_id: 4950368
                        company_id: 42128
                        parent_id: 0
                        user_type: 1
                        created: '2019-10-02 02:41:18'
                        user_name: JDoe
                        firstname: John
                        lastname: Doe
                        company: ''
                        email: test@test.com
                        active: true
                        role: 29399
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                        pass_reset: '0'
                      modified_at: null
                      modified_by: null
                      original_debt_amount: 10500
                      current_debt_amount: 9499.5
                      current_payment: 153
                      current_rate: 0
                      notes: null
                      verified_debt_amount: 0
                      creditor:
                        object: creditor
                        creditor_id: 540
                        acctID: 3863
                        tp_id: 0
                        is_active: '1'
                        company_name: Chase
                        first_name: null
                        last_name: null
                        address:
                          address1: P O Box 15919
                          address2: ''
                          address3: null
                          city: Wilmington
                          state: Delaware
                          zip: 19850-0464
                        phone: 800-444-9370
                      debt_buyer:
                        object: creditor
                        creditor_id: 17576331
                        acctID: 3863
                        tp_id: 0
                        is_active: '1'
                        company_name: Bob's Debt Co.
                        first_name: Bob
                        last_name: Smith
                        address:
                          address1: 101 Debt Way
                          address2: Suite 2200
                          address3: null
                          city: Chicago
                          state: IL
                          zip: '60614'
                        phone: '3123839994'
                      poa_sent_date: '2019-08-24'
                      legal_account: 'No'
                      last_payment_date: '2019-08-24'
                      last_payment_amount: 0
                      opened_date: '2019-08-24'
                      available_balance: 0
                      enrolled: '0'
                      enrolled_date: '2019-08-24 00:00:00'
                      debt_type: '0'
                      cash_advance: '0'
                      balance_transfer: '0'
                      heavy_usage: '0'
                      has_summons: '0'
                      debt_status: null
                      locked: '0'
                      og_account_num: '12345674445'
                      creditor_account_num: null
                      settled: '0'
                      settlement_id: 0
                      client_id: 382760691
                      settlement_offers: []
                      customs: []
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Debts
      summary: Delete a Debt Record by ID
      description: Deletes a Debt Record
      operationId: debtDelete
      parameters:
        - name: id
          in: path
          description: Id of Debt Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully Deleted Debt Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Debt DELETE 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt DELETE 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/debts/{id}/task':
    post:
      tags:
        - Debts
        - Debt_Tasks
      summary: Create a Debt Task using DebtID
      description: Creates a new Debt Task
      operationId: debtTaskCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assigned_to:
                  description: 'The ID of the person(s) the Debt Task wil be assigned to. The Debt Task can be assigned to a User, Team, or Contact.'
                  type: integer
                defined_task:
                  description: ''
                  type: integer
                task_name:
                  description: ''
                  type: string
      parameters:
        - in: path
          name: id
          description: Id of Debt Record to create the Task for
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully created a Debt Task
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/TaskResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt Note POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
      x-internal: true
  '/debts/{id}/tasks':
    get:
      tags:
        - Debts
        - Debt_Tasks
      summary: Get List of All Tasks for a Debt Record by DebtID
      description: |-
        Returns all existing Tasks associated with a Debt Record.

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> By default the SMS Messages are returned in order of Newest to Oldest.</i></span>
      operationId: getDebtTasks
      parameters:
        - name: id
          in: path
          description: Id of a unique Debt Record
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully created a Debt Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
  '/debts/{id}/notes':
    post:
      tags:
        - Debts
      summary: Create a Debt Note using DebtID
      description: Creates a new Debt Note
      operationId: debtNoteCreate
      parameters:
        - in: path
          name: id
          description: Id of Debt Record to add Note to
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/DebtNote.yaml
      responses:
        '200':
          description: Successfully created a Debt Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: ./models/DebtNoteResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Debt Note POST 200 Response Example:
                  value:
                    response:
                      object: debt_note
                      note_id: 22377190
                      acctID: 2123
                      note_created_date: '2021-11-26 08:49:16'
                      client_id: 475956560
                      debt_id: 152080478
                      title: API Test D
                      created_by:
                        object: user
                        user_id: 6583363
                        company_id: 12758
                        parent_id: 0
                        user_type: 1
                        created: '2021-10-18 04:12:46'
                        user_name: Greg
                        firstname: Greg
                        lastname: Johnson
                        company: ''
                        email: g.johnson@debtpaypro.com
                        active: true
                        role: 15203
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                      content: API Test Debt Note
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt Note POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/debts/notes/{id}':
    delete:
      tags:
        - Debts
      summary: Delete a Debt Note by ID
      description: Deletes a Debt Note
      operationId: debtNoteDelete
      parameters:
        - name: id
          in: path
          description: Id of Debt Note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted Debt Note
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Debt Note POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /loans:
    post:
      tags:
        - Loans
      summary: Create a Loan Record
      description: |-
        Creates a Loan Record

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: loanCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/LoanRequest.yaml
            examples:
              Request:
                value:
                  client_id: 382760691
                  advance_type: ACH
                  type_id: 1
                  program_id: 0
                  loan_class: 1
                  loan_amount: 4550.72
                  payback_amount: 0
                  rate: 0
                  payment: 0
                  holdback_percent: 0.02
                  payback_period: 0
                  frequency: D
                  freq_int: ''
                  period_amount: 0
                  fees: 0
                  conf_num: '12345'
                  underwrite_notes: Lorem Ipsum
                  funded: false
                  status: 10
                  lien_pos: 0
                  ach_on: false
                  pricing_lock: false
                  offer_set: 1043077
              Required Parameters Only:
                value:
                  client_id: 382760691
                  loan_amount: 4550.72
                  payback_amount: 0
      responses:
        '200':
          description: Successfully created a Loan Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Loan POST 200 Response Example:
                  value:
                    response:
                      id: 1863358
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Loans POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/loans/{id}':
    get:
      tags:
        - Loans
      summary: Find a Loan Record by ID
      description: Returns a Loan Record
      operationId: loanRead
      parameters:
        - name: id
          in: path
          description: Id of Loan Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Loan Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/LoanResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Loan GET 200 Response Example:
                  value:
                    response:
                      object: loan
                      loan_id: '1868335'
                      acctID: 3863
                      tp_id: 0
                      created_at: '2021-11-22 05:02:09'
                      created_by: 4950368
                      modified_at: '2021-12-12 05:02:09'
                      modified_by: 0
                      client_id: 382760691
                      advance_type: ACH
                      advance_date: '2021-12-25'
                      paid_in_full_date: '2022-05-25'
                      type_id: 1
                      program_id: 0
                      loan_class: 1
                      loan_amount: 4550.72
                      payback_amount: 0
                      rate: 0.02
                      payment: 0
                      holdback_percent: 0.02
                      payback_period: 0
                      frequency: D
                      freq_int: ''
                      period_amount: 0
                      fees: 0
                      conf_num: '12345'
                      underwriter_notes: ''
                      contract_date: '2021-12-25'
                      contract_number: ''
                      funded: true
                      status: 1
                      lien_pos: 1
                      ach_start_date: '2021-12-25'
                      ach_on: true
                      pricing_lock: true
                      offer_set: 1048066
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Loan GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Loans
      summary: Update a Loan Record by ID
      description: Updates a Loan Record
      operationId: loanUpdate
      parameters:
        - name: id
          in: path
          description: Id of Loan Record to Update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/LoanResponse.yaml
      responses:
        '200':
          description: Successfully updated a Loan Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/LoanResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Loan PUT 200 Response Example:
                  value:
                    response:
                      object: loan
                      loan_id: '1868335'
                      acctID: 3863
                      tp_id: null
                      created_at: '2021-11-22 05:02:09'
                      created_by: '4950368'
                      modified_at: null
                      modified_by: null
                      client_id: '382760691'
                      advance_type: ACH
                      advance_date: null
                      paid_in_full_date: null
                      defaulted_date: null
                      type_id: '1'
                      program_id: '0'
                      loan_class: '1'
                      loan_amount: '4550.72'
                      payback_amount: '0.00'
                      rate: '0'
                      payment: '0.00'
                      holdback_percent: '0.02'
                      payback_period: '0.00'
                      frequency: D
                      freq_int: ''
                      period_amount: '0'
                      fees: '0.00'
                      conf_num: '12345'
                      underwriter_notes: ''
                      contract_date: null
                      contract_number: ''
                      funded: '0'
                      status: '10'
                      lien_pos: '0'
                      ach_start_date: null
                      ach_on: '0'
                      pricing_lock: '0'
                      offer_set: '1048066'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Loan PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Loans
      summary: Delete a Loan Record by ID
      description: Deletes a Loan Record
      operationId: loanDelete
      parameters:
        - name: id
          in: path
          description: Id of Loan Record to Delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted Loan Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Loan DELETE 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Loan DELETE 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /settlement_offers:
    post:
      tags:
        - Settlement_Offers
      summary: Create a Settlement Offer Record
      description: |-
        Creates a Settlement Offer

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: settlementOfferCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/SettlementofferRequest.yaml
            examples:
              Request:
                value:
                  contact_id: 382760691
                  creditor: 0
                  debt_id: 124504794
                  offer_status: 0
                  offer_status_date: '2019-08-24'
                  offer_valid_date: '2019-08-24'
                  settlement_type: 2
                  debt_amount: 8500.55
                  settlement_amount: 0
                  settlement_fee: 0
                  notes: Lorem Ipsum
                  cred_cont_id: 0
                  json: {}
              Required Parameters Only:
                value:
                  contact_id: 382760691
                  debt_id: 124504794
                  offer_valid_date: '2019-08-24'
                  settlement_type: 1
                  debt_amount: 8500.55
                  settlement_amount: 1
                  creditor: 540
        required: true
        description: ''
      responses:
        '200':
          description: Successfully created a Settlement Offer
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Settlement Offer POST 200 Response Example:
                  value:
                    response:
                      id: 4114375
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Settlement Offer 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/settlement_offers/{id}':
    get:
      tags:
        - Settlement_Offers
      summary: Find a Settlement Offer Record by ID
      description: Returns a Settlement Offer
      operationId: settlementOfferRead
      parameters:
        - name: id
          in: path
          description: Id of settlement offer to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Settlement Offer Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/SettlementofferResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Settlement Offer GET 200 Response Example:
                  value:
                    response:
                      object: settlement_offer
                      id: 4114375
                      acctID: 3863
                      contact_id: 485599270
                      creditor: 540
                      debt_id: 12345
                      created_at: '2021-11-18 21:51:21'
                      created_by:
                        object: user
                        user_id: 4950368
                        company_id: 42128
                        parent_id: 0
                        created: '2019-10-02 02:41:18'
                        user_name: JDoe
                        firstname: John
                        lastname: Doe
                        company: ''
                        email: test@test.com
                        active: true
                        role: 29399
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                      modified_at: null
                      modified_by: null
                      neg_id:
                        object: user
                        user_id: '4950368'
                        company_id: '42128'
                        parent_id: '0'
                        created: '2019-10-02 02:41:18'
                        user_name: BobS
                        firstname: Bob
                        lastname: Smith
                        company: ''
                        email: bsmith@test.com
                        active: '1'
                        role: '29399'
                        attorney: '0'
                        payee_id: '0'
                        del: '0'
                        delTime: null
                      madeby: Negotiator
                      offer_status: null
                      offer_status_date: '2022-03-07'
                      offer_valid_date: '2021-10-24'
                      settlement_type: '0'
                      debt_amount: '0.00'
                      settlement_amount: '0.00'
                      settlement_fee: '0.00'
                      notes: Lorem Ipsum
                      cred_cont_id: '0'
                      json: []
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Settlement Offer GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Settlement_Offers
      summary: Update a Settlement Offer Record by ID
      description: Updates a Settlement Offer Record
      operationId: settlementOfferUpdate
      parameters:
        - name: id
          in: path
          description: Id of settlement offer to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/SettlementofferResponse.yaml
        description: Settlement offer object that will be updated
        required: true
      responses:
        '200':
          description: Successfully Updated Settlement Offer
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/SettlementofferResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                SettlementOffer PUT 200 Response Example:
                  value:
                    response:
                      object: settlement_offer
                      id: 4114375
                      acctID: 3863
                      contact_id: 485599270
                      creditor: 540
                      debt_id: 12345
                      created_at: '2021-11-18 21:51:21'
                      created_by:
                        object: user
                        user_id: 4950368
                        company_id: 42128
                        parent_id: 0
                        created: '2019-10-02 02:41:18'
                        user_name: JDoe
                        firstname: John
                        lastname: Doe
                        company: ''
                        email: test@test.com
                        active: true
                        role: 29399
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                      modified_at: null
                      modified_by: null
                      neg_id:
                        object: user
                        user_id: '4950368'
                        company_id: '42128'
                        parent_id: '0'
                        created: '2019-10-02 02:41:18'
                        user_name: BobS
                        firstname: Bob
                        lastname: Smith
                        company: ''
                        email: bsmith@test.com
                        active: '1'
                        role: '29399'
                        attorney: '0'
                        payee_id: '0'
                        del: '0'
                        delTime: null
                      madeby: Negotiator
                      offer_status: null
                      offer_status_date: '2022-03-07'
                      offer_valid_date: '2021-10-24'
                      settlement_type: '0'
                      debt_amount: '0.00'
                      settlement_amount: '0.00'
                      settlement_fee: '0.00'
                      notes: Lorem Ipsum
                      cred_cont_id: '0'
                      json: []
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                SettlementOffer PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Settlement_Offers
      summary: Delete a Settlement Offer Record by ID
      description: Deletes a Settlement Offer
      operationId: settlementOfferDelete
      parameters:
        - name: id
          in: path
          description: Id of settlement offer to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully Deleted Settlement Offer
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                SettlementOffer Delete 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                SettlementOffer Delete 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create a Task Record
      description: |-
        Creates a Task Record

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: taskCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/TaskRequest.yaml
            examples:
              Request:
                value:
                  contact_id: 516553837
                  task_name: Task Name
                  defined_task: 0
                  task_due_date: '2019-08-24'
                  task_note: Task Note
                  list_id: 123
                  team_id: 123
                  task_completion_percentage: 0
                  task_status: 0
                  title: Title
                  task_type: 0
                  assigned_to:
                    object: User
                    id: 22721
              Required Parameters Only:
                value:
                  contact_id: 516553837
                  task_name: Task Name
                  defined_task: 25907
                  task_due_date: '2019-08-24'
                  task_note: Task Note
                  title: Title
                  assigned_to:
                    object: User
                    id: 51494
        description: Task object to be created
        required: true
      responses:
        '200':
          description: Successfully created a Task Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Task POST 200 Response Example:
                  value:
                    response:
                      id: 32549869
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Tasks POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/tasks/{id}':
    get:
      tags:
        - Tasks
      summary: Find a Task Record by ID
      description: Returns a Task Record
      operationId: taskRead
      parameters:
        - name: id
          in: path
          description: Id of task to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a Task Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/TaskResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Tasks GET 200 Response Example:
                  value:
                    response:
                      object: task
                      id: 32811025
                      acctID: 3863
                      contact_id: 516553837
                      task_created_date: '2021-12-02 16:12:32'
                      task_name: Task Name
                      defined_task: 25907
                      created_by:
                        object: user
                        id: 4950368
                        acctID: 3863
                        company_id: 42128
                        parent_id: 0
                        user_type: 1
                        created: '2019-10-02 02:41:18'
                        user_name: Greg
                        firstname: Greg
                        lastname: Johnson
                        company: ''
                        email: g.johnson@debtpaypro.com
                        active: true
                        role: 29399
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                        pass_reset: '0'
                      task_due_date: '2019-08-24'
                      task_note: Task Note
                      list_id: '0'
                      team_id: '0'
                      task_completed: '0'
                      task_completed_by: null
                      task_completed_date: ''
                      task_completion_percentage: '0'
                      task_status: '0'
                      title: Task Name
                      task_type: '0'
                      assigned_to:
                        object: user
                        id: '51494'
                        acctID: '5'
                        company_id: '83'
                        parent_id: '0'
                        user_type: '1'
                        created: '2014-12-23 11:06:46'
                        user_name: support
                        firstname: Debt Pay Pro
                        lastname: Support
                        company: ''
                        email: dpp@debtpaypro.com
                        active: '0'
                        role: '4990'
                        attorney: '0'
                        payee_id: '0'
                        del: '0'
                        delTime: null
                        pass_reset: '0'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Task GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Tasks
      summary: Update a Task Record by ID
      description: Updates a Task Record
      operationId: taskUpdate
      parameters:
        - name: id
          in: path
          description: Id of task to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/TaskRequest.yaml
        description: Task object that needs to be updated
      responses:
        '200':
          description: Successfully updated a Task Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/TaskResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Task Update 200 Response Example:
                  value:
                    response:
                      object: task
                      id: 32811025
                      acctID: 3863
                      contact_id: 516553837
                      task_created_date: '2021-12-02 16:12:32'
                      task_name: Task Name
                      defined_task: 25907
                      created_by:
                        object: user
                        id: 4950368
                        acctID: 3863
                        company_id: 42128
                        parent_id: 0
                        user_type: 1
                        created: '2019-10-02 02:41:18'
                        user_name: Greg
                        firstname: Greg
                        lastname: Johnson
                        company: ''
                        email: g.johnson@debtpaypro.com
                        active: true
                        role: 29399
                        attorney: false
                        payee_id: 0
                        del: false
                        delTime: null
                        pass_reset: '0'
                      task_due_date: '2019-08-24'
                      task_note: Task Note
                      list_id: '0'
                      team_id: '0'
                      task_completed: '0'
                      task_completed_by: null
                      task_completed_date: ''
                      task_completion_percentage: '0'
                      task_status: '0'
                      title: Task Name
                      task_type: '0'
                      assigned_to:
                        object: user
                        id: '51494'
                        acctID: '5'
                        company_id: '83'
                        parent_id: '0'
                        user_type: '1'
                        created: '2014-12-23 11:06:46'
                        user_name: support
                        firstname: Debt Pay Pro
                        lastname: Support
                        company: ''
                        email: dpp@debtpaypro.com
                        active: '0'
                        role: '4990'
                        attorney: '0'
                        payee_id: '0'
                        del: '0'
                        delTime: null
                        pass_reset: '0'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Task PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Tasks
      summary: Delete a Task Record by ID
      description: Deletes a Task Record
      operationId: taskDelete
      parameters:
        - name: id
          in: path
          description: Id of task object to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted Task Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Task Delete 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Task DELETE 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /teams:
    get:
      tags:
        - Teams
      summary: Find All Existing Team Records
      description: Returns a List all Existing Team Records
      operationId: teamsGet
      responses:
        '200':
          description: Successfully retrieved list of Teams
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Teams GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    post:
      tags:
        - Teams
      summary: Create a Team Record
      description: Creates a Team Record
      operationId: teamCreate
      responses:
        '200':
          description: Successfully created a Team Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Team POST 200 Response Example:
                  value:
                    response:
                      id: 20872
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Teams POST 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/TeamRequest.yaml
            examples:
              Request:
                value:
                  name: Test
  '/teams/{id}':
    get:
      tags:
        - Teams
      summary: Find a Team Record by ID
      description: Returns a Team Record
      operationId: teamRead
      parameters:
        - name: id
          in: path
          description: Id of team to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved team record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/TeamResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Teams GET 200 Response Example:
                  value:
                    response:
                      object: team
                      team_id: 20875
                      company_id: 42128
                      name: Test
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Teams GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Teams
      summary: Update a Team Record by ID
      description: Updates a Team Record
      operationId: teamUpdate
      parameters:
        - name: id
          in: path
          description: Id of team to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/TeamResponse.yaml
      responses:
        '200':
          description: Successfully updated Team Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/TeamResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Teams PUT 200 Response Example:
                  value:
                    response:
                      object: team
                      team_id: 20875
                      company_id: 42128
                      name: Test
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Teams PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Teams
      summary: Delete a Team Record by ID
      description: Deletes a Team Record
      operationId: teamDelete
      parameters:
        - name: id
          in: path
          description: Id of team
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted Team Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Teams Delete 200 Response Example:
                  value:
                    status:
                      code: 200
                      message: Successfully deleted object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Teams Delete 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /users:
    post:
      tags:
        - Users
      summary: Create a User Record
      description: |-
        Creates a User Record object

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> Select the `'Examples'` option to change the content of the request's Body to ONLY contain the required POST Parameters.</i></span>
      operationId: userCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/UserRequest.yaml
            examples:
              Request:
                value:
                  parent_id: 4950368
                  user_type: 1
                  user_name: API_User123
                  firstname: John
                  lastname: Doe
                  company: API Test Company
                  email: mail@debtpaypro.com
                  active: true
                  role: 29399
                  attorney: true
                  payee_id: 23006
              Required Parameters Only:
                value:
                  user_type: 1
                  user_name: API_User123
                  firstname: John
                  lastname: Doe
                  email: mail@debtpaypro.com
                  active: true
                  role: 29399
        description: User Object
      responses:
        '200':
          description: Successfully created User Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Users Post 200 Response Example:
                  value:
                    response:
                      id: 6664975
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Users Post 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  '/users/{id}':
    get:
      tags:
        - Users
      summary: Find a User Record by ID
      description: Returns a User Record
      operationId: userRead
      parameters:
        - name: id
          in: path
          description: Id of User Record to Return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved a User Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/UserResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Users GET 200 Response Example:
                  value:
                    response:
                      object: user
                      id: 6033912
                      company_id: 42128
                      parent_id: 4950368
                      created: '2021-01-13 12:47:25'
                      user_name: QAuser
                      firstname: QA
                      lastname: Tester
                      company: Acme
                      email: mail@debtpaypro.com
                      active: true
                      role: 29399
                      attorney: true
                      payee_id: 23006
                      del: 0
                      delTime: '2021-01-13 12:47:25'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                User GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    put:
      tags:
        - Users
      summary: Update a User Record by ID
      description: Updates a User Record
      operationId: userUpdate
      parameters:
        - name: id
          in: path
          description: Id of User Record to Update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/UserResponse.yaml
        required: true
      responses:
        '200':
          description: Successfully Updated User Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: models/UserResponse.yaml
                  status:
                    $ref: models/SuccessStatus.yaml
              examples:
                Users PUT 200 Response Example:
                  value:
                    response:
                      object: user
                      id: 6033912
                      company_id: 42128
                      parent_id: 4950368
                      created: '2021-01-13 12:47:25'
                      user_name: QAuser
                      firstname: QA
                      lastname: Tester
                      company: Acme
                      email: mail@debtpaypro.com
                      active: true
                      role: 29399
                      attorney: true
                      payee_id: 23006
                      del: 0
                      delTime: '2021-01-13 12:47:25'
                    status:
                      code: 200
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                User PUT 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
    delete:
      tags:
        - Users
      summary: Delete a User Record by ID
      description: Deletes a User Record
      operationId: userDelete
      parameters:
        - name: id
          in: path
          description: Id of User Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted User Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Users Delete 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'
  /users/current:
    get:
      tags:
        - Users
      summary: Find User Record of Current User
      description: Returns the User Record of the Current Active User
      operationId: userCurrent
      responses:
        '400':
          description: some error
          content:
            application/json:
              schema:
                properties:
                  status:
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
                    type: object
                type: object
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/User'
                type: object
  '/users/{id}/tasks':
    post:
      tags:
        - Users
      summary: Find Task Records for User by ID
      description: Returns All Existing Task Records for a single User
      operationId: userTasks
      parameters:
        - name: id
          in: path
          description: Id of user whose tasks to be returned
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                completed:
                  description: Get task records for user
                  type: integer
                start:
                  description: Get task records for user
                  type: integer
                limit:
                  description: Get task records for user
                  type: integer
              type: object
      responses:
        '400':
          description: some error
          content:
            application/json:
              schema:
                properties:
                  status:
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
                    type: object
                type: object
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    description: Get task records for user
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                type: object
  '/users/{id}/events':
    post:
      tags:
        - Users
      summary: Find Event Records for User by ID
      description: Returns All Existing Event Records for a single User
      operationId: userEvents
      parameters:
        - name: id
          in: path
          description: Id of user whose events to be returned
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                public:
                  description: Get event records for user
                  type: integer
                dismissed:
                  description: Get event records for user
                  type: integer
                start:
                  description: Get event records for user
                  type: integer
                limit:
                  description: Get event records for user
                  type: integer
              type: object
      responses:
        '400':
          description: some error
          content:
            application/json:
              schema:
                properties:
                  status:
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
                    type: object
                type: object
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/SuccessStatus.yaml
                  response:
                    description: Get event records for user
                    type: array
                    items:
                      $ref: '#/components/schemas/CalEvent'
                type: object
  '/lenders/monevo/{contact_id}/offers':
    get:
      tags:
        - Lenders
      summary: Get all Monevo Lenders
      description: Returns a List of all Loan Offers associated with a Contact
      operationId: getLendersMonevo
      parameters:
        - name: contact_id
          in: path
          description: Id of CRM Contact
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved Lenders
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    id: '37939'
                    acctID: '2715'
                    loan_id: null
                    created_at: '2021-11-10 13:59:39'
                    created_by: '3028014'
                    status_id: '2'
                    loan_amount: '$18,000.00'
                    rate: 0
                    apr: 14.8
                    term: '36'
                    payment_amt: $622.21
                    payback_amt: null
                    frequency: null
                    active: null
                    type: null
                    label: null
                    term_unit: months
                    amortization: null
                    amortization_unit: null
                    amortization_method: null
                    compounding: null
                    initial_date: null
                    first_payment_date: null
                    last_payment_date: null
                    increment_type: null
                    increment_value: null
                    sequence_order: null
                    meta_data:
                      id: '17629247'
                      offer_number: '2'
                      redirect_url: 'https://usa.monevo.com/redirect?p=YTE4YWJkMjhhMzlhY2ExZDZiN2MxZjcxMzc3OThkNWZiMGI1MDkzNDRlNGJmZGY1ZGE0M2JjN2NkYTdiNGEzYzgyMjUyYzJjZjIyZTU3OGFkYjExN2MwOTcyMjg4YmM1YjBiOTU1MWY1MWUwZjE1NTI2YjVmOTg2ZjM0YmY1MWRiYzVmODNiZjRmMWZmOTk1NmNiOTMwN2YxOTA3OGY3Mw'
                      loan:
                        loan_amount: '18000'
                        apr: '14.80'
                        term: '36'
                        fees: '0'
                        monthly_repayment: '622.21'
                        total_repayment: '$22,399.00'
                        cost_of_credit: '4399.56'
                        type: PERSONAL_LOAN
                        rapr: 'Our view "With no origination fees, late fees or overdraft fees, as well as very competitive rates, SoFi is a great option."'
                        features:
                          feature:
                            - No origination fees
                            - ' No pre-payment penalties'
                            - A+ Better Business Bureau rating
                            - $30 Billion in funded loans
                        terms: 'Fixed rates from 5.99% APR to 19.63% APR (with AutoPay). SoFi rate ranges are current as of July 30, 2021 and are subject to change without notice. Not all rates and amounts available in all states. See Personal Loan eligibility details. Not all applicants qualify for the lowest rate. Lowest rates reserved for the most creditworthy borrowers. Your actual rate will be within the range of rates listed above and will depend on a variety of factors, including evaluation of your credit worthiness, income, and other factors. See APR examples and terms. The SoFi 0.25% AutoPay interest rate reduction requires you to agree to make monthly principal and interest payments by an automatic monthly deduction from a savings or checking account. The benefit will discontinue and be lost for periods in which you do not pay by automatic deduction from a savings or checking account.'
                        prequalified: 'true'
                        preapproved: 'false'
                        secured: 'false'
                      lender:
                        id: '85'
                        name: SoFi
                        description: 'SoFi is a new kind of finance company taking a radical approach to lending and wealth management. From unprecedented products and tools to faster service and open conversations, we’re all about helping our members get ahead and find success. Whether they’re looking to buy a home, save money on student loans, ascend in their careers, or invest in the future, the SoFi community works to empower our members to accomplish the goals they set and achieve financial greatness as a result.'
                        url: www.sofi.com
                        phone_number: {}
                        logo_url: 'https://images.monevo.com/ptusa/lender/pr_sofi-logo1.png'
                        review:
                          service: TRUSTPILOT
                          id: {}
                properties:
                  id:
                    type: string
                    minLength: 1
                  acctID:
                    type: string
                    minLength: 1
                  loan_id: {}
                  created_at:
                    type: string
                    minLength: 1
                  created_by:
                    type: string
                    minLength: 1
                  status_id:
                    type: string
                    minLength: 1
                  loan_amount:
                    type: string
                    minLength: 1
                  rate:
                    type: number
                  apr:
                    type: number
                  term:
                    type: string
                    minLength: 1
                  payment_amt:
                    type: string
                    minLength: 1
                  payback_amt: {}
                  frequency: {}
                  active: {}
                  type: {}
                  label: {}
                  term_unit:
                    type: string
                    minLength: 1
                  amortization: {}
                  amortization_unit: {}
                  amortization_method: {}
                  compounding: {}
                  initial_date: {}
                  first_payment_date: {}
                  last_payment_date: {}
                  increment_type: {}
                  increment_value: {}
                  sequence_order: {}
                  meta_data:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      offer_number:
                        type: string
                        minLength: 1
                      redirect_url:
                        type: string
                        minLength: 1
                      loan:
                        type: object
                        properties:
                          loan_amount:
                            type: string
                            minLength: 1
                          apr:
                            type: string
                            minLength: 1
                          term:
                            type: string
                            minLength: 1
                          fees:
                            type: string
                            minLength: 1
                          monthly_repayment:
                            type: string
                            minLength: 1
                          total_repayment:
                            type: string
                            minLength: 1
                          cost_of_credit:
                            type: string
                            minLength: 1
                          type:
                            type: string
                            minLength: 1
                          rapr:
                            type: string
                            minLength: 1
                          features:
                            type: object
                            properties:
                              feature:
                                type: array
                                items:
                                  type: object
                          terms:
                            type: string
                            minLength: 1
                          prequalified:
                            type: string
                            minLength: 1
                          preapproved:
                            type: string
                            minLength: 1
                          secured:
                            type: string
                            minLength: 1
                      lender:
                        type: object
                        properties:
                          id:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                          url:
                            type: string
                            minLength: 1
                          phone_number:
                            type: object
                          logo_url:
                            type: string
                            minLength: 1
                          review:
                            type: object
                            properties:
                              service:
                                type: string
                                minLength: 1
                              id:
                                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
  
  


































  /documents/types:
    get:
      tags:
        - Documents
        - DocumentTypes
      summary: Find All Existing Document Types
      description: |-
        Returns all existing Document Types.

        <span><i class="fa fa-info-circle"></i><i style="font-size:12px"> By default the Document Types are returned in order of Newest to Oldest.</i></span>      
      operationId: docTypesRead
      responses:
        '200':
          description: Successfully retrieved list of Document Types
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                  status:
                    $ref: models/SuccessStatus.yaml    
        '400':
          description: Error
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/ErrorStatus.yaml
              examples:
                Teams GET 400 Response Example:
                  value:
                    status:
                      code: 400
                      message: 'Input Parsing Error: unexpected character'    
    post:
      summary: docTypesCreate
      tags:
        - Documents
      responses: {}
      operationId: post-documents-types
components:
  schemas:
    Status:
      description: ''
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
      type: object
    Stat:
      description: stat record
      properties:
        gateway:
          type: integer
        num_payments_made:
          type: integer
        total_num_payments:
          type: integer
        total_fees_paid:
          type: integer
        total_fees_owed:
          type: integer
        num_returns:
          type: integer
        num_fees_taken:
          type: integer
        total_num_fees:
          type: integer
        sum_of_cleared_payments:
          type: integer
        sum_of_payments:
          type: integer
      type: object
    CalEvent:
      description: CalEvent record
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        assigned_to:
          type: integer
        contact_id:
          type: integer
        event_type:
          type: string
        title:
          type: string
        description:
          type: string
        location:
          type: string
        location_id:
          type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        timezone:
          type: string
        utc_start:
          type: string
          format: date-time
        utc_end:
          type: string
          format: date-time
        allday:
          type: integer
        repeats:
          type: integer
        repeatswhen:
          type: string
        repeatends:
          type: string
        reminder:
          type: string
        notify_part:
          type: integer
        auto_dismiss:
          type: integer
        public:
          type: integer
        dismissed:
          type: integer
          readOnly: true
        dismissed_at:
          type: string
          format: date-time
          readOnly: true
        hidden:
          type: integer
        event_result:
          type: integer
        userfield1:
          type: string
        userfield2:
          type: string
        userfield3:
          type: string
      type: object
    Call:
      title: Call
      type: object
      description: Call Record Object
      properties:
        object:
          type: string
          example: call
          readOnly: true
        id:
          type: integer
          minLength: 1
          description: ID of the call record
          example: 385319179
          readOnly: true
        acctID:
          type: integer
          example: 3863
          readOnly: true
        contactID:
          type: integer
          example: 516553837
        userID:
          type: integer
          example: 3028014
          readOnly: true
        sdate:
          type: string
          format: date
          pattern: YYYY-mm-dd
        created_at:
          type: string
          format: date-time
          readOnly: true
        call_type:
          type: string
          enum:
            - Outgoing
            - Incoming
          example: Outgoing
        call_result:
          type: string
          example: Busy
        notes:
          type: string
          example: Lorem Ipsum
        status_change:
          type: string
          example: '274158'
        duration:
          type: string
          format: duration
          example: '00:01:15'
        event_id:
          type: integer
          example: 8179
        dialer_id:
          type: integer
          example: 2
          enum:
            - 1
            - 2
            - 3
        recording_url:
          type: string
          example: '"http://example.com"'
        assigned_agent:
          $ref: models/UserResponse.yaml
      required:
        - contactID
        - call_type
        - call_result
    Campaign:
      type: object
      description: ''
      title: ''
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        company_id:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
        title:
          type: string
          example: Campaign Title
        start_date:
          type: string
          format: date
          pattern: YYYY-mm-dd
        end_date:
          type: string
          format: date
          pattern: YYYY-mm-dd
        source_id:
          type: integer
          example: 3184
        cost:
          type: number
          example: 1984.25
          format: double
        cost_type:
          type: integer
          example: 1
        priority:
          type: integer
          example: 4
        external_id:
          type: integer
          readOnly: true
        media_type:
          type: integer
          example: 1
        purchase_amount:
          type: number
          example: 42
        del:
          type: boolean
          default: false
          readOnly: true
        del_by:
          type: integer
          readOnly: true
        deltime:
          type: string
          format: date-time
          readOnly: true
      required:
        - title
        - start_date
        - end_date
        - cost
        - media_type
      x-examples:
        CampaignUpdateExample:
          active: true
          title: Campaign Title
          start_date: '2019-08-24'
          end_date: '2019-08-24'
          source_id: 3184
          cost: 1984.25
          cost_type: 1
          priority: 4
          external_id: 0
          media_type: 1
          purchase_amount: 42
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        name:
          type: string
        company_code:
          type: string
        phone:
          type: string
        parent_id:
          type: integer
        company_type:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        contactname:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        phone2:
          type: string
        fax:
          type: string
        email:
          type: string
        timezone:
          type: string
        ein:
          type: string
        esign:
          type: integer
        domain:
          type: string
        gcs_account_num:
          type: string
        gcs_policy_group_id:
          type: string
        account_num:
          type: string
        routing_num:
          type: string
        bank_name:
          type: string
        account_type:
          type: string
        active:
          type: integer
        theme:
          type: string
        logo_url:
          type: string
        additional1:
          type: string
        additional2:
          type: string
        additional3:
          type: string
        additional4:
          type: string
        additional5:
          type: string
        additional6:
          type: string
        account_exec:
          type: integer
        docusign_acct:
          type: string
        docusign_pass:
          type: string
        docusign_user:
          type: string
        enroll_charge:
          type: number
        charge_payee:
          type: integer
      required:
        - name
        - company_code
        - company_type
        - contactname
        - email
    Address:
      description: address record
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      type: object
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        company_id:
          type: integer
          readOnly: true
        file_type:
          type: integer
        form_id:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        assigned_to:
          type: integer
        campaign_id:
          type: integer
        attorney:
          type: integer
        attorney_id:
          type: integer
        attorney_id2:
          type: integer
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        salutation:
          type: string
        title:
          type: string
        phone_number:
          type: string
        phone_extension:
          type: string
        cell_phone:
          type: string
        cell_extension:
          type: string
        work_phone:
          type: string
        work_extension:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
        social_security_number:
          type: string
        date_of_birth:
          type: string
          format: date
        language:
          type: integer
        submitted:
          type: integer
        submitted_by:
          type: integer
        submitted_at:
          type: string
          format: date-time
        approved_by2:
          type: integer
        approved_date2:
          type: string
          format: date
        rejected_by:
          type: integer
        rejected_notes:
          type: string
        paused_notes:
          type: string
        dropped_reason:
          type: integer
        grad_date:
          type: string
          format: date
        total_debt:
          type: number
        welcome_sent:
          type: string
          format: date-time
        paper_statements:
          type: integer
        paper_welcome:
          type: integer
        gateway_id:
          type: integer
        gateway_approved_by:
          type: integer
        gateway_hold:
          type: integer
        gateway_hold_reason:
          type: integer
        gateway_hold_notes:
          type: string
        gateway_auth_received:
          type: integer
        gateway_auth_file:
          type: string
        iscoapp:
          type: integer
        customs:
          type: array
          items:
            type: object
            properties:
              field_id:
                type: integer
              value:
                type: string
              label:
                type: string
      required:
        - first_name
        - last_name
        - phone_number
        - address
        - email
        - date_of_birth
    Creditor:
      type: object
      properties:
        id:
          type: integer
        acctID:
          type: integer
        tp_id:
          type: integer
        is_active:
          type: integer
        company_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        phone:
          type: string
    Note:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client_id:
          type: integer
        acctID:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        object_type:
          type: integer
          readOnly: true
        record_id:
          type: integer
        note:
          type: string
      required:
        - client_id
        - note
    Debt:
      required:
        - original_debt_amount
        - current_debt_amount
        - client_id
        - creditor
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        original_debt_amount:
          type: number
        current_debt_amount:
          type: number
        current_payment:
          type: number
        current_rate:
          type: number
        notes:
          type: string
        verified_debt_amount:
          type: number
        creditor:
          type: array
          items:
            $ref: '#/components/schemas/Creditor'
        debt_buyer:
          type: string
        poa_sent_date:
          type: string
          format: date
        legal_account:
          type: string
        last_payment_date:
          type: string
          format: date
        last_payment_amount:
          type: number
        opened_date:
          type: string
          format: date
        available_balance:
          type: number
        enrolled:
          type: integer
        enrolled_date:
          type: string
          format: date
        debt_type:
          type: integer
        debt_status:
          type: string
        locked:
          type: integer
        og_account_num:
          type: string
        creditor_account_num:
          type: string
        settled:
          type: integer
        settlement_id:
          type: integer
        client_id:
          type: integer
        settlement_offers:
          type: array
          items:
            type: string
        customs:
          type: array
          items:
            type: string
      type: object
    Docs:
      description: docs data
      properties:
        clixsign:
          type: array
          items: {}
        esigns:
          type: array
          items: {}
        docusign:
          type: array
          items: {}
        uploads:
          type: array
          items: {}
        generated:
          type: array
          items: {}
      type: object
    Loan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        tp_id:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        client_id:
          type: integer
        advance_type:
          type: string
        advance_date:
          type: string
          format: date
        paid_in_full_date:
          type: string
          format: date
        defaulted_date:
          type: string
          format: date
        type_id:
          type: integer
        program_id:
          type: integer
        loan_class:
          type: integer
        loan_amount:
          type: number
        payback_amount:
          type: number
        rate:
          type: number
        payment:
          type: number
        holdback_percent:
          type: number
        payback_period:
          type: integer
        frequency:
          type: string
        freq_int:
          type: string
        period_amount:
          type: number
        fees:
          type: number
        conf_num:
          type: string
        underwrite_notes:
          type: string
        contract_date:
          type: string
          format: date
        contract_number:
          type: string
        funded:
          type: integer
        status:
          type: integer
        lien_pos:
          type: integer
        ach_start_date:
          type: string
          format: date
        ach_on:
          type: integer
        pricing_lock:
          type: integer
        offer_set:
          type: integer
      required:
        - client_id
        - loan_amount
        - payback_amount
    Settlement:
      description: Settlement record
      properties:
        id:
          type: integer
          readOnly: true
        contact_id:
          type: integer
        creditor:
          $ref: '#/components/schemas/Creditor'
        debt_id:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        neg_id:
          type: integer
        madeby:
          type: string
        offer_status:
          properties:
            status_id:
              type: string
            label:
              type: string
          type: object
        offer_status_date:
          type: string
          format: date
        offer_valid_date:
          type: string
          format: date
        settlement_type:
          type: integer
        debt_amount:
          type: number
        settlement_amount:
          type: number
        settlement_fee:
          type: number
        notes:
          type: string
        cred_cont_id:
          type: integer
        json:
          type: object
      type: object
    Settlementoffer:
      title: Settlement Offer
      type: object
      properties:
        offer_id:
          type: integer
          title: Offer ID
          example: 4036117
          readOnly: true
        acctID:
          type: integer
          title: Account ID
          example: 3863
          readOnly: true
        contact_id:
          title: Contact ID
          type: integer
          example: 485599270
        creditor:
          $ref: '#/components/schemas/Creditor'
        debt_id:
          title: Debt ID
          type: integer
          example: 12345
        created_at:
          type: string
          title: Created Date
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/User'
        modified_at:
          type: string
          title: Modified Date
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          title: Modified By
          readOnly: true
        neg_id:
          title: Neg ID
          type: integer
        madeby:
          title: Made By
          type: string
          example: Negotiator
        offer_status:
          title: Offer Status
          example: 3
          type: integer
        offer_status_date:
          title: Offer Status Date
          format: date
          example: '2022-03-07'
          type: string
        offer_valid_date:
          title: Offer Valid Date
          type: string
          format: date
          example: '2021-10-24'
        settlement_type:
          title: Settlement Type
          type: integer
        debt_amount:
          title: Debt Amount
          type: number
          example: 0
        settlement_amount:
          title: Settlement Amount
          type: number
          example: 0
        settlement_fee:
          title: Settlement Fee
          type: number
          example: 0
        notes:
          title: Notes
          type: string
          example: Lorem Ipsum
        cred_cont_id:
          title: Cred Cont ID
          type: integer
          example: 0
        json:
          type: object
      required:
        - contact_id
        - creditor
        - debt_id
        - offer_status
        - offer_status_date
        - offer_valid_date
        - settlement_type
        - debt_amount
        - settlement_amount
        - settlement_fee
    Task:
      description: task record
      properties:
        acctID:
          type: integer
          readOnly: true
        id:
          type: integer
          readOnly: true
        contact_id:
          type: integer
        task_created_date:
          type: string
          format: date-time
          readOnly: true
        task_name:
          type: string
        defined_task:
          type: integer
        created_by:
          type: integer
          readOnly: true
        task_due_date:
          type: string
          format: date
        task_note:
          type: string
        list_id:
          type: integer
        team_id:
          type: integer
        task_completed:
          type: integer
          readOnly: true
        task_completed_by:
          type: integer
          readOnly: true
        task_completed_date:
          type: string
          format: date-time
          readOnly: true
        task_completion_percentage:
          type: integer
        task_status:
          type: integer
        title:
          type: string
        assigned_to_id:
          type: integer
        task_type:
          type: integer
        assigned_to:
          type: string
      type: object
    TaskItem:
      description: task item
      properties:
        task_category:
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                type: integer
              title:
                type: string
      type: object
    Team:
      description: User team record
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        company_id:
          type: integer
          readOnly: true
        name:
          type: string
      type: object
    User:
      type: object
      description: ''
      properties:
        user_id:
          title: User ID
          type: integer
          example: 6033912
          readOnly: true
        acctID:
          title: Account ID
          type: integer
          example: 3863
          readOnly: true
        guid:
          title: Group ID
          type: string
          example: ba2a29ca-f1d7-f58d-f670-fb92f716e513
        company_id:
          title: Company ID
          type: integer
          example: 42128
          readOnly: true
        parent_id:
          title: Parent ID
          type: integer
          example: 4950368
        user_type:
          title: User Type
          type: integer
          example: 1
        created:
          title: Created Date
          type: string
          format: date-time
          example: '2021-01-13 12:47:25'
          readOnly: true
        user_name:
          title: User Name
          type: string
          example: QAuser
        firstname:
          title: First Name
          type: string
          example: QA
        lastname:
          title: Last Name
          type: string
          example: Tester
        company:
          title: Company Name
          type: string
          example: Acme
        email:
          title: Company Email
          type: string
          example: mail@debtpaypro.com
        active:
          title: Active Indicator
          type: boolean
          example: true
        role:
          title: Role
          type: integer
          example: 29399
        attorney:
          title: Attorney Indicator
          type: boolean
          example: true
        payee_id:
          title: Payee ID
          type: integer
          example: 23006
        del:
          title: Del
          type: integer
          example: 0
          readOnly: true
        delTime:
          title: Delete Date
          type: string
          format: date-time
          example: '2021-01-13 12:47:25'
          readOnly: true
        pass_reset:
          title: Password Reset
          type: boolean
          example: false
        master:
          title: Master Indicator
          type: boolean
          example: false
        billable:
          title: Billable Indicator
          type: boolean
          example: true
      required:
        - email
    Call-Update:
      title: Call
      type: object
      description: ''
      properties:
        contactID:
          type: integer
        activity_id:
          type: integer
          example: 0
        sdate:
          type: string
          format: date
          example: '2021-12-10'
        call_type:
          type: string
          enum:
            - Outgoing
            - Incoming
        call_result:
          type: string
        call_dis_id:
          type: integer
          example: 0
        notes:
          type: string
        status_change:
          type: string
        duration:
          type: string
          format: duration
          pattern: 'hh:mm:ss'
        event_id:
          type: integer
          example: 0
        dialer_id:
          type: integer
          example: 0
        recording_id:
          type: integer
    SMS:
      title: SMS
      type: object
      properties:
        start:
          type: integer
        limit:
          type: integer
      required:
        - start
        - limit
  responses:
    '400':
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: models/ErrorStatus.yaml
    default:
      description: default
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: models/SuccessStatus.yaml
              response:
                type: object
                properties: {}
  parameters:
    id:
      name: id
      in: query
      schema:
        type: integer
    version:
      name: version
      in: header
      schema:
        type: string
        pattern: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-[a-zA-Z\d][-a-zA-Z.\d]*)?(\+[a-zA-Z\d][-a-zA-Z.\d]*)?$'
        minLength: 5
        maxLength: 12
        format: uri
      required: true
      description: Current API Version Number
  requestBodies:
    Contact:
      content:
        application/json:
          schema:
            $ref: ./models/ContactResponse.yaml
      description: Contact Object
      required: true
    Loan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Loan'
      description: Loan Object
      required: true
    Note:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note'
      description: Note Object
      required: true
    Campaign:
      content:
        application/json:
          schema:
            $ref: models/CampaignRequest.yaml
      description: Campaign Object
      required: true
    Company:
      content:
        application/json:
          schema:
            $ref: models/Company.yaml
      description: Company Object
      required: true
    Debt:
      content:
        application/json:
          schema:
            $ref: models/DebtRequest.yaml
      description: Debt Object
      required: true
    Team:
      content:
        application/json:
          schema:
            $ref: models/TeamRequest.yaml
      description: ''
      required: true
  securitySchemes:
    API-Key:
      type: apiKey
      name: Api-Key
      in: header
security:
  - API-Key: []
